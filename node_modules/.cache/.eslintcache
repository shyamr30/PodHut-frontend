[{"D:\\8th sem\\project\\frontend\\src\\index.js":"1","D:\\8th sem\\project\\frontend\\src\\App.js":"2","D:\\8th sem\\project\\frontend\\src\\reportWebVitals.js":"3","D:\\8th sem\\project\\frontend\\src\\store\\index.js":"4","D:\\8th sem\\project\\frontend\\src\\hooks\\useLoadingWithRefresh.js":"5","D:\\8th sem\\project\\frontend\\src\\pages\\Home\\Home.jsx":"6","D:\\8th sem\\project\\frontend\\src\\pages\\Rooms\\Rooms.jsx":"7","D:\\8th sem\\project\\frontend\\src\\pages\\Room\\Room.jsx":"8","D:\\8th sem\\project\\frontend\\src\\pages\\Authenticate\\Authenticate.jsx":"9","D:\\8th sem\\project\\frontend\\src\\pages\\Activate\\Activate.jsx":"10","D:\\8th sem\\project\\frontend\\src\\components\\shared\\Navigation\\Navigation.jsx":"11","D:\\8th sem\\project\\frontend\\src\\components\\shared\\Loader\\Loader.jsx":"12","D:\\8th sem\\project\\frontend\\src\\store\\authSlice.js":"13","D:\\8th sem\\project\\frontend\\src\\store\\activateSlice.js":"14","D:\\8th sem\\project\\frontend\\src\\hooks\\useWebRTC.js":"15","D:\\8th sem\\project\\frontend\\src\\components\\shared\\Button\\Button.jsx":"16","D:\\8th sem\\project\\frontend\\src\\components\\RoomCard\\RoomCard.jsx":"17","D:\\8th sem\\project\\frontend\\src\\components\\PrivateModel\\PrivateModal.jsx":"18","D:\\8th sem\\project\\frontend\\src\\components\\AddRoomModal\\AddRoomModal.jsx":"19","D:\\8th sem\\project\\frontend\\src\\components\\shared\\Card\\Card.jsx":"20","D:\\8th sem\\project\\frontend\\src\\pages\\Steps\\StepPhoneEmail\\StepPhoneEmail.jsx":"21","D:\\8th sem\\project\\frontend\\src\\pages\\Steps\\StepOtp\\StepOtp.jsx":"22","D:\\8th sem\\project\\frontend\\src\\pages\\Steps\\StepName\\StepName.jsx":"23","D:\\8th sem\\project\\frontend\\src\\pages\\Steps\\StepAvatar\\StepAvatar.jsx":"24","D:\\8th sem\\project\\frontend\\src\\http\\index.js":"25","D:\\8th sem\\project\\frontend\\src\\hooks\\useStateWithCallback.js":"26","D:\\8th sem\\project\\frontend\\src\\actions.js":"27","D:\\8th sem\\project\\frontend\\src\\components\\shared\\TextInput\\TextInput.jsx":"28","D:\\8th sem\\project\\frontend\\src\\pages\\Steps\\StepPhoneEmail\\Phone\\Phone.jsx":"29","D:\\8th sem\\project\\frontend\\src\\socket\\index.js":"30","D:\\8th sem\\project\\frontend\\src\\pages\\Steps\\StepPhoneEmail\\Email\\Email.jsx":"31"},{"size":388,"mtime":1644850314000,"results":"32","hashOfConfig":"33"},{"size":2837,"mtime":1645711708000,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1643443220000,"results":"35","hashOfConfig":"33"},{"size":214,"mtime":1645257778000,"results":"36","hashOfConfig":"33"},{"size":778,"mtime":1645540754000,"results":"37","hashOfConfig":"33"},{"size":1122,"mtime":1651350246000,"results":"38","hashOfConfig":"33"},{"size":2287,"mtime":1651345458000,"results":"39","hashOfConfig":"33"},{"size":4556,"mtime":1651577242000,"results":"40","hashOfConfig":"33"},{"size":459,"mtime":1643894796000,"results":"41","hashOfConfig":"33"},{"size":511,"mtime":1645253708000,"results":"42","hashOfConfig":"33"},{"size":2160,"mtime":1646058028000,"results":"43","hashOfConfig":"33"},{"size":601,"mtime":1645539838000,"results":"44","hashOfConfig":"33"},{"size":817,"mtime":1645355210000,"results":"45","hashOfConfig":"33"},{"size":580,"mtime":1645257574000,"results":"46","hashOfConfig":"33"},{"size":10273,"mtime":1647440790000,"results":"47","hashOfConfig":"33"},{"size":343,"mtime":1643656978000,"results":"48","hashOfConfig":"33"},{"size":1311,"mtime":1646057728000,"results":"49","hashOfConfig":"33"},{"size":1354,"mtime":1651351394000,"results":"50","hashOfConfig":"33"},{"size":2813,"mtime":1648836960000,"results":"51","hashOfConfig":"33"},{"size":388,"mtime":1645453522000,"results":"52","hashOfConfig":"33"},{"size":651,"mtime":1648488816000,"results":"53","hashOfConfig":"33"},{"size":1608,"mtime":1645455700000,"results":"54","hashOfConfig":"33"},{"size":1346,"mtime":1645021664000,"results":"55","hashOfConfig":"33"},{"size":2752,"mtime":1678001222660,"results":"56","hashOfConfig":"33"},{"size":1443,"mtime":1646662924000,"results":"57","hashOfConfig":"33"},{"size":618,"mtime":1646233486000,"results":"58","hashOfConfig":"33"},{"size":345,"mtime":1647440852000,"results":"59","hashOfConfig":"33"},{"size":331,"mtime":1645626330000,"results":"60","hashOfConfig":"33"},{"size":1332,"mtime":1645455634000,"results":"61","hashOfConfig":"33"},{"size":344,"mtime":1647442082000,"results":"62","hashOfConfig":"33"},{"size":863,"mtime":1643894798000,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"huj4nv",{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"D:\\8th sem\\project\\frontend\\src\\index.js",[],["132","133"],"D:\\8th sem\\project\\frontend\\src\\App.js",[],"D:\\8th sem\\project\\frontend\\src\\reportWebVitals.js",[],"D:\\8th sem\\project\\frontend\\src\\store\\index.js",[],"D:\\8th sem\\project\\frontend\\src\\hooks\\useLoadingWithRefresh.js",["134"],"import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setAuth } from '../store/authSlice';\r\n\r\nexport function useLoadingWithRefresh() {\r\n    const [loading, setLoading] = useState(true);\r\n    const dispatch = useDispatch();\r\n    useEffect(() =>{\r\n        (async () => {\r\n            try {\r\n                const {data} = await axios.get(`${process.env.REACT_APP_API_URL}/api/refresh`, {\r\n                    withCredentials: true,\r\n                });\r\n\r\n                dispatch(setAuth(data));\r\n                setLoading(false);\r\n\r\n            } catch(err) {\r\n                console.log(err);\r\n                setLoading(false);\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    return {loading};\r\n\r\n}","D:\\8th sem\\project\\frontend\\src\\pages\\Home\\Home.jsx",["135","136"],"import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styles from './Home.module.css';\r\nimport Card from '../../components/shared/Card/Card';\r\nimport Button from '../../components/shared/Button/Button';\r\n\r\nconst Home = () => {\r\n  const signInLinkStyle = {\r\n    color:'#0077ff',\r\n    fontWeight:'bold',\r\n    textDecoration:'none',\r\n  };\r\n  \r\n  const history = useHistory();\r\n  function startRegister(){\r\n    history.push('/authenticate');\r\n  }\r\n\r\n  return (\r\n  <div className={styles.cardWrapper}>\r\n    <Card title=\"Welcome to PodHut\" icon=\"logo\">\r\n    <p className={styles.text}>\r\n      PodHut is a podacast application, where people can interact with each other and can talk about; be it sports, politics or academics.\r\n      Not able find topic you want to discuss, feel free to create your own Room and start conversation.\r\n      Like to host a private session where only invited people can join, than start a \"Close Room\".\r\n    </p>\r\n    <div>\r\n        <Button onClick={startRegister} text=\"Let's Go\"/>\r\n    </div>\r\n\r\n    </Card>\r\n  \r\n  </div>\r\n  \r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\8th sem\\project\\frontend\\src\\pages\\Rooms\\Rooms.jsx",[],"D:\\8th sem\\project\\frontend\\src\\pages\\Room\\Room.jsx",["137"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useWebRTC } from '../../hooks/useWebRTC';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { getRoom } from '../../http';\r\n\r\nimport styles from './Room.module.css';\r\n\r\nconst Room = () => {\r\n    const user = useSelector((state) => state.auth.user);\r\n    const { id: roomId } = useParams();\r\n    const [room, setRoom] = useState(null);\r\n\r\n    const { clients, provideRef, handleMute } = useWebRTC(roomId, user);\r\n\r\n    const history = useHistory();\r\n\r\n    const [isMuted, setMuted] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchRoom = async () => {\r\n            const { data } = await getRoom(roomId);\r\n            setRoom((prev) => data);\r\n        };\r\n\r\n        fetchRoom();\r\n    }, [roomId]);\r\n\r\n    useEffect(() => {\r\n        handleMute(isMuted, user.id);\r\n    }, [isMuted]);\r\n\r\n    const handManualLeave = () => {\r\n        history.push('/rooms');\r\n    };\r\n\r\n    const handleMuteClick = (clientId) => {\r\n        if (clientId !== user.id) {\r\n            return;\r\n        }\r\n        setMuted((prev) => !prev);\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <button onClick={handManualLeave} className={styles.goBack}>\r\n                    <img src=\"/images/arrow-left.png\" alt=\"arrow-left\" />\r\n                    <span>All voice rooms</span>\r\n                </button>\r\n            </div>\r\n            <div className={styles.clientsWrap}>\r\n                <div className={styles.header}>\r\n                    {room && <h2 className={styles.topic}>{room.topic}</h2>}\r\n                    <div className={styles.actions}>\r\n                        {/* <button className={styles.actionBtn}>\r\n                            <img src=\"/images/palm.png\" alt=\"palm-icon\" />\r\n                        </button> */}\r\n                        <button\r\n                            onClick={handManualLeave}\r\n                            className={styles.actionBtn}\r\n                        >\r\n                            <img src=\"/images/win.png\" alt=\"win-icon\" />\r\n                            <span>Leave quietly</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.clientsList}>\r\n                    {clients.map((client) => {\r\n                        return (\r\n                            <div className={styles.client} key={client.id}>\r\n                                <div className={styles.userHead}>\r\n                                    <img\r\n                                        className={styles.userAvatar}\r\n                                        src={client.avatar}\r\n                                        alt=\"\"\r\n                                    />\r\n                                    <audio\r\n                                        autoPlay\r\n                                        ref={(instance) => {\r\n                                            provideRef(instance, client.id);\r\n                                        }}\r\n                                    />\r\n                                    <button\r\n                                        onClick={() =>\r\n                                            handleMuteClick(client.id)\r\n                                        }\r\n                                        className={styles.micBtn}\r\n                                    >\r\n                                        {client.muted ? (\r\n                                            <img\r\n                                                className={styles.mic}\r\n                                                src=\"/images/mic-mute.png\"\r\n                                                alt=\"mic\"\r\n                                            />\r\n                                        ) : (\r\n                                            <img\r\n                                                className={styles.micImg}\r\n                                                src=\"/images/mic.png\"\r\n                                                alt=\"mic\"\r\n                                            />\r\n                                        )}\r\n                                    </button>\r\n                                </div>\r\n                                <h4>{client.name}</h4>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Room;","D:\\8th sem\\project\\frontend\\src\\pages\\Authenticate\\Authenticate.jsx",[],"D:\\8th sem\\project\\frontend\\src\\pages\\Activate\\Activate.jsx",[],"D:\\8th sem\\project\\frontend\\src\\components\\shared\\Navigation\\Navigation.jsx",[],"D:\\8th sem\\project\\frontend\\src\\components\\shared\\Loader\\Loader.jsx",[],"D:\\8th sem\\project\\frontend\\src\\store\\authSlice.js",[],"D:\\8th sem\\project\\frontend\\src\\store\\activateSlice.js",[],"D:\\8th sem\\project\\frontend\\src\\hooks\\useWebRTC.js",["138","139","140","141"],"import { useEffect, useState, useRef, useCallback } from 'react';\r\nimport { ACTIONS } from '../actions';\r\nimport socketInit from '../socket';\r\nimport freeice from 'freeice';\r\nimport { useStateWithCallback } from './useStateWithCallback';\r\n\r\nexport const useWebRTC = (roomId, user) => {\r\n    const [clients, setClients] = useStateWithCallback([]);\r\n    const audioElements = useRef({});\r\n    const connections = useRef({});\r\n    const socket = useRef(null);\r\n    const localMediaStream = useRef(null);\r\n    const clientsRef = useRef(null);\r\n\r\n    const addNewClient = useCallback(\r\n        (newClient, cb) => {\r\n            const lookingFor = clients.find(\r\n                (client) => client.id === newClient.id\r\n            );\r\n\r\n            if (lookingFor === undefined) {\r\n                setClients(\r\n                    (existingClients) => [...existingClients, newClient],\r\n                    cb\r\n                );\r\n            }\r\n        },\r\n        [clients, setClients]\r\n    );\r\n\r\n    useEffect(() => {\r\n        clientsRef.current = clients;\r\n    }, [clients]);\r\n\r\n    useEffect(() => {\r\n        const initChat = async () => {\r\n            socket.current = socketInit();\r\n            await captureMedia();\r\n            addNewClient({ ...user, muted: true }, () => {\r\n                const localElement = audioElements.current[user.id];\r\n                if (localElement) {\r\n                    localElement.volume = 0;\r\n                    localElement.srcObject = localMediaStream.current;\r\n                }\r\n            });\r\n            socket.current.on(ACTIONS.MUTE_INFO, ({ userId, isMute }) => {\r\n                handleSetMute(isMute, userId);\r\n            });\r\n\r\n            socket.current.on(ACTIONS.ADD_PEER, handleNewPeer);\r\n            socket.current.on(ACTIONS.REMOVE_PEER, handleRemovePeer);\r\n            socket.current.on(ACTIONS.ICE_CANDIDATE, handleIceCandidate);\r\n            socket.current.on(ACTIONS.SESSION_DESCRIPTION, setRemoteMedia);\r\n            socket.current.on(ACTIONS.MUTE, ({ peerId, userId }) => {\r\n                handleSetMute(true, userId);\r\n            });\r\n            socket.current.on(ACTIONS.UNMUTE, ({ peerId, userId }) => {\r\n                handleSetMute(false, userId);\r\n            });\r\n            socket.current.emit(ACTIONS.JOIN, {\r\n                roomId,\r\n                user,\r\n            });\r\n\r\n            async function captureMedia() {\r\n                // Start capturing local audio stream.\r\n                localMediaStream.current =\r\n                    await navigator.mediaDevices.getUserMedia({\r\n                        audio: true,\r\n                    });\r\n            }\r\n            async function handleNewPeer({\r\n                peerId,\r\n                createOffer,\r\n                user: remoteUser,\r\n            }) {\r\n                if (peerId in connections.current) {\r\n                    return console.warn(\r\n                        `You are already connected with ${peerId} (${user.name})`\r\n                    );\r\n                }\r\n\r\n                // Store it to connections\r\n                connections.current[peerId] = new RTCPeerConnection({\r\n                    iceServers: freeice(),\r\n                });\r\n\r\n                // Handle new ice candidate on this peer connection\r\n                connections.current[peerId].onicecandidate = (event) => {\r\n                    socket.current.emit(ACTIONS.RELAY_ICE, {\r\n                        peerId,\r\n                        icecandidate: event.candidate,\r\n                    });\r\n                };\r\n\r\n                // Handle on track event on this connection\r\n                connections.current[peerId].ontrack = ({\r\n                    streams: [remoteStream],\r\n                }) => {\r\n                    addNewClient({ ...remoteUser, muted: true }, () => {\r\n                        // get current users mute info\r\n                        const currentUser = clientsRef.current.find(\r\n                            (client) => client.id === user.id\r\n                        );\r\n                        if (currentUser) {\r\n                            socket.current.emit(ACTIONS.MUTE_INFO, {\r\n                                userId: user.id,\r\n                                roomId,\r\n                                isMute: currentUser.muted,\r\n                            });\r\n                        }\r\n                        if (audioElements.current[remoteUser.id]) {\r\n                            audioElements.current[remoteUser.id].srcObject =\r\n                                remoteStream;\r\n                        } else {\r\n                            let settled = false;\r\n                            const interval = setInterval(() => {\r\n                                if (audioElements.current[remoteUser.id]) {\r\n                                    audioElements.current[\r\n                                        remoteUser.id\r\n                                    ].srcObject = remoteStream;\r\n                                    settled = true;\r\n                                }\r\n\r\n                                if (settled) {\r\n                                    clearInterval(interval);\r\n                                }\r\n                            }, 300);\r\n                        }\r\n                    });\r\n                };\r\n\r\n                // Add connection to peer connections track\r\n                localMediaStream.current.getTracks().forEach((track) => {\r\n                    connections.current[peerId].addTrack(\r\n                        track,\r\n                        localMediaStream.current\r\n                    );\r\n                });\r\n\r\n                // Create an offer if required\r\n                if (createOffer) {\r\n                    const offer = await connections.current[\r\n                        peerId\r\n                    ].createOffer();\r\n\r\n                    // Set as local description\r\n                    await connections.current[peerId].setLocalDescription(\r\n                        offer\r\n                    );\r\n\r\n                    // send offer to the server\r\n                    socket.current.emit(ACTIONS.RELAY_SDP, {\r\n                        peerId,\r\n                        sessionDescription: offer,\r\n                    });\r\n                }\r\n            }\r\n            async function handleRemovePeer({ peerId, userId }) {\r\n                // Correction: peerID to peerId\r\n                if (connections.current[peerId]) {\r\n                    connections.current[peerId].close();\r\n                }\r\n\r\n                delete connections.current[peerId];\r\n                delete audioElements.current[peerId];\r\n                setClients((list) => list.filter((c) => c.id !== userId));\r\n            }\r\n            async function handleIceCandidate({ peerId, icecandidate }) {\r\n                if (icecandidate) {\r\n                    connections.current[peerId].addIceCandidate(icecandidate);\r\n                }\r\n            }\r\n            async function setRemoteMedia({\r\n                peerId,\r\n                sessionDescription: remoteSessionDescription,\r\n            }) {\r\n                connections.current[peerId].setRemoteDescription(\r\n                    new RTCSessionDescription(remoteSessionDescription)\r\n                );\r\n\r\n                // If session descrition is offer then create an answer\r\n                if (remoteSessionDescription.type === 'offer') {\r\n                    const connection = connections.current[peerId];\r\n\r\n                    const answer = await connection.createAnswer();\r\n                    connection.setLocalDescription(answer);\r\n\r\n                    socket.current.emit(ACTIONS.RELAY_SDP, {\r\n                        peerId,\r\n                        sessionDescription: answer,\r\n                    });\r\n                }\r\n            }\r\n            async function handleSetMute(mute, userId) {\r\n                const clientIdx = clientsRef.current\r\n                    .map((client) => client.id)\r\n                    .indexOf(userId);\r\n                const allConnectedClients = JSON.parse(\r\n                    JSON.stringify(clientsRef.current)\r\n                );\r\n                if (clientIdx > -1) {\r\n                    allConnectedClients[clientIdx].muted = mute;\r\n                    setClients(allConnectedClients);\r\n                }\r\n            }\r\n        };\r\n\r\n        initChat();\r\n        return () => {\r\n            localMediaStream.current\r\n                .getTracks()\r\n                .forEach((track) => track.stop());\r\n            socket.current.emit(ACTIONS.LEAVE, { roomId });\r\n            for (let peerId in connections.current) {\r\n                connections.current[peerId].close();\r\n                delete connections.current[peerId];\r\n                delete audioElements.current[peerId];\r\n            }\r\n            socket.current.off(ACTIONS.ADD_PEER);\r\n            socket.current.off(ACTIONS.REMOVE_PEER);\r\n            socket.current.off(ACTIONS.ICE_CANDIDATE);\r\n            socket.current.off(ACTIONS.SESSION_DESCRIPTION);\r\n            socket.current.off(ACTIONS.MUTE);\r\n            socket.current.off(ACTIONS.UNMUTE);\r\n        };\r\n    }, []);\r\n\r\n    const provideRef = (instance, userId) => {\r\n        audioElements.current[userId] = instance;\r\n    };\r\n\r\n    const handleMute = (isMute, userId) => {\r\n        let settled = false;\r\n\r\n        if (userId === user.id) {\r\n            let interval = setInterval(() => {\r\n                if (localMediaStream.current) {\r\n                    localMediaStream.current.getTracks()[0].enabled = !isMute;\r\n                    if (isMute) {\r\n                        socket.current.emit(ACTIONS.MUTE, {\r\n                            roomId,\r\n                            userId: user.id,\r\n                        });\r\n                    } else {\r\n                        socket.current.emit(ACTIONS.UNMUTE, {\r\n                            roomId,\r\n                            userId: user.id,\r\n                        });\r\n                    }\r\n                    settled = true;\r\n                }\r\n                if (settled) {\r\n                    clearInterval(interval);\r\n                }\r\n            }, 200);\r\n        }\r\n    };\r\n\r\n    return {\r\n        clients,\r\n        provideRef,\r\n        handleMute,\r\n    };\r\n};\r\n","D:\\8th sem\\project\\frontend\\src\\components\\shared\\Button\\Button.jsx",[],"D:\\8th sem\\project\\frontend\\src\\components\\RoomCard\\RoomCard.jsx",[],"D:\\8th sem\\project\\frontend\\src\\components\\PrivateModel\\PrivateModal.jsx",[],"D:\\8th sem\\project\\frontend\\src\\components\\AddRoomModal\\AddRoomModal.jsx",[],"D:\\8th sem\\project\\frontend\\src\\components\\shared\\Card\\Card.jsx",[],"D:\\8th sem\\project\\frontend\\src\\pages\\Steps\\StepPhoneEmail\\StepPhoneEmail.jsx",["142"],"import React, { useState } from 'react';\r\nimport Phone from './Phone/Phone';\r\nimport Email from './Email/Email';\r\nimport styles from './StepPhoneEmail.module.css';\r\n\r\n\r\nconst phoneEmailMap = {\r\n  phone: Phone,\r\n  email: Email,\r\n}\r\nconst StepPhoneEmail = ({ onNext }) => {\r\n\r\n  const [type, setType] = useState('phone');\r\n  const Component = phoneEmailMap[type];\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className={styles.cardWrapper}>\r\n        <div>\r\n          <div className={styles.buttonWrap}>\r\n\r\n\r\n          </div>\r\n          <Component onNext={onNext} />\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nexport default StepPhoneEmail;\r\n","D:\\8th sem\\project\\frontend\\src\\pages\\Steps\\StepOtp\\StepOtp.jsx",[],"D:\\8th sem\\project\\frontend\\src\\pages\\Steps\\StepName\\StepName.jsx",[],"D:\\8th sem\\project\\frontend\\src\\pages\\Steps\\StepAvatar\\StepAvatar.jsx",[],"D:\\8th sem\\project\\frontend\\src\\http\\index.js",[],"D:\\8th sem\\project\\frontend\\src\\hooks\\useStateWithCallback.js",[],"D:\\8th sem\\project\\frontend\\src\\actions.js",[],"D:\\8th sem\\project\\frontend\\src\\components\\shared\\TextInput\\TextInput.jsx",[],"D:\\8th sem\\project\\frontend\\src\\pages\\Steps\\StepPhoneEmail\\Phone\\Phone.jsx",[],"D:\\8th sem\\project\\frontend\\src\\socket\\index.js",[],"D:\\8th sem\\project\\frontend\\src\\pages\\Steps\\StepPhoneEmail\\Email\\Email.jsx",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":24,"column":8,"nodeType":"149","endLine":24,"endColumn":10,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":2,"column":10,"nodeType":"153","messageId":"154","endLine":2,"endColumn":14},{"ruleId":"151","severity":1,"message":"155","line":8,"column":9,"nodeType":"153","messageId":"154","endLine":8,"endColumn":24},{"ruleId":"147","severity":1,"message":"156","line":31,"column":8,"nodeType":"149","endLine":31,"endColumn":17,"suggestions":"157"},{"ruleId":"151","severity":1,"message":"158","line":1,"column":21,"nodeType":"153","messageId":"154","endLine":1,"endColumn":29},{"ruleId":"147","severity":1,"message":"159","line":217,"column":36,"nodeType":"153","endLine":217,"endColumn":43},{"ruleId":"147","severity":1,"message":"160","line":218,"column":38,"nodeType":"153","endLine":218,"endColumn":45},{"ruleId":"147","severity":1,"message":"161","line":227,"column":8,"nodeType":"149","endLine":227,"endColumn":10,"suggestions":"162"},{"ruleId":"151","severity":1,"message":"163","line":13,"column":16,"nodeType":"153","messageId":"154","endLine":13,"endColumn":23},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["166"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'signInLinkStyle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleMute' and 'user.id'. Either include them or remove the dependency array.",["167"],"'useState' is defined but never used.","The ref value 'connections.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'connections.current' to a variable inside the effect, and use that variable in the cleanup function.","The ref value 'audioElements.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'audioElements.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has missing dependencies: 'addNewClient', 'roomId', 'setClients', and 'user'. Either include them or remove the dependency array.",["168"],"'setType' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},"Update the dependencies array to be: [dispatch]",{"range":"175","text":"176"},"Update the dependencies array to be: [handleMute, isMuted, user.id]",{"range":"177","text":"178"},"Update the dependencies array to be: [addNewClient, roomId, setClients, user]",{"range":"179","text":"180"},[744,746],"[dispatch]",[906,915],"[handleMute, isMuted, user.id]",[9148,9150],"[addNewClient, roomId, setClients, user]"]