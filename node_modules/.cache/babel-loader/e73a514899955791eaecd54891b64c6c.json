{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport { useStateWithCallback } from \"./useStateWithCallback\";\nconst users = [{\n  id: 1,\n  name: 'aaloo'\n}, {\n  id: 2,\n  name: 'kaloo'\n}];\nexport const useWebRTC = (roomId, user) => {\n  _s();\n\n  const [clients, setClients] = useStateWithCallback(users);\n  const audioElements = useRef({});\n  const connections = useRef({});\n  const localMediaStream = useRef(null);\n\n  const provideRef = (instance, userId) => {\n    audioElements.current[userId] = instance;\n  };\n\n  return {\n    clients,\n    provideRef\n  };\n};\n\n_s(useWebRTC, \"FLX1Z1kBos+8JKhRG8bHFSKXggE=\", false, function () {\n  return [useStateWithCallback];\n});","map":{"version":3,"sources":["E:/College Assignment/Sem 6/SDP Project/project/frontend/src/hooks/useWebRTC.js"],"names":["useRef","useStateWithCallback","users","id","name","useWebRTC","roomId","user","clients","setClients","audioElements","connections","localMediaStream","provideRef","instance","userId","current"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,oBAAT,QAAqC,wBAArC;AAEA,MAAMC,KAAK,GAAG,CACV;AACIC,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE;AAFV,CADU,EAKR;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CALQ,CAAd;AAWA,OAAO,MAAMC,SAAS,GAAG,CAACC,MAAD,EAASC,IAAT,KAAkB;AAAA;;AACvC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,oBAAoB,CAACC,KAAD,CAAlD;AACA,QAAMQ,aAAa,GAAGV,MAAM,CAAC,EAAD,CAA5B;AACA,QAAMW,WAAW,GAAGX,MAAM,CAAC,EAAD,CAA1B;AACA,QAAMY,gBAAgB,GAAGZ,MAAM,CAAC,IAAD,CAA/B;;AAEA,QAAMa,UAAU,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AACrCL,IAAAA,aAAa,CAACM,OAAd,CAAsBD,MAAtB,IAAgCD,QAAhC;AACH,GAFD;;AAIA,SAAO;AAACN,IAAAA,OAAD;AAAUK,IAAAA;AAAV,GAAP;AACH,CAXM;;GAAMR,S;UACqBJ,oB","sourcesContent":["import { useRef } from \"react\";\r\nimport { useStateWithCallback } from \"./useStateWithCallback\";\r\n\r\nconst users = [\r\n    {\r\n        id: 1,\r\n        name: 'aaloo'\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'kaloo'\r\n      },\r\n];\r\n\r\nexport const useWebRTC = (roomId, user) => {\r\n    const [clients, setClients] = useStateWithCallback(users);\r\n    const audioElements = useRef({});\r\n    const connections = useRef({});\r\n    const localMediaStream = useRef(null);\r\n\r\n    const provideRef = (instance, userId) => {\r\n        audioElements.current[userId] = instance;\r\n    }\r\n\r\n    return {clients, provideRef};\r\n}"]},"metadata":{},"sourceType":"module"}