{"ast":null,"code":"import _asyncToGenerator from\"E:\\\\College Assignment\\\\Sem 6\\\\SDP Project\\\\project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"E:\\\\College Assignment\\\\Sem 6\\\\SDP Project\\\\project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"E:\\\\College Assignment\\\\Sem 6\\\\SDP Project\\\\project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect}from'react';import{useSelector}from'react-redux';import{useWebRTC}from'../../hooks/useWebRTC';import{useParams,useHistory}from'react-router-dom';import{getRoom}from'../../http';import styles from'./Room.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Room=function Room(){var user=useSelector(function(state){return state.auth.user;});var _useParams=useParams(),roomId=_useParams.id;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),room=_useState2[0],setRoom=_useState2[1];var _useWebRTC=useWebRTC(roomId,user),clients=_useWebRTC.clients,provideRef=_useWebRTC.provideRef,handleMute=_useWebRTC.handleMute;var history=useHistory();var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isMuted=_useState4[0],setMuted=_useState4[1];useEffect(function(){var fetchRoom=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$getRoom,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getRoom(roomId);case 2:_yield$getRoom=_context.sent;data=_yield$getRoom.data;setRoom(function(prev){return data;});case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchRoom(){return _ref.apply(this,arguments);};}();fetchRoom();},[roomId]);useEffect(function(){handleMute(isMuted,user.id);},[isMuted]);var handManualLeave=function handManualLeave(){history.push('/rooms');};var handleMuteClick=function handleMuteClick(clientId){if(clientId!==user.id){return;}setMuted(function(prev){return!prev;});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"button\",{onClick:handManualLeave,className:styles.goBack,children:[/*#__PURE__*/_jsx(\"img\",{src:\"/images/arrow-left.png\",alt:\"arrow-left\"}),/*#__PURE__*/_jsx(\"span\",{children:\"All voice rooms\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:styles.clientsWrap,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.header,children:[room&&/*#__PURE__*/_jsx(\"h2\",{className:styles.topic,children:room.topic}),/*#__PURE__*/_jsxs(\"div\",{className:styles.actions,children:[/*#__PURE__*/_jsx(\"button\",{className:styles.actionBtn,children:/*#__PURE__*/_jsx(\"img\",{src:\"/images/palm.png\",alt:\"palm-icon\"})}),/*#__PURE__*/_jsxs(\"button\",{onClick:handManualLeave,className:styles.actionBtn,children:[/*#__PURE__*/_jsx(\"img\",{src:\"/images/win.png\",alt:\"win-icon\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Leave quietly\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.clientsList,children:clients.map(function(client){return/*#__PURE__*/_jsxs(\"div\",{className:styles.client,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.userHead,children:[/*#__PURE__*/_jsx(\"img\",{className:styles.userAvatar,src:client.avatar,alt:\"\"}),/*#__PURE__*/_jsx(\"audio\",{autoPlay:true,ref:function ref(instance){provideRef(instance,client.id);}}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleMuteClick(client.id);},className:styles.micBtn,children:client.muted?/*#__PURE__*/_jsx(\"img\",{className:styles.mic,src:\"/images/mic-mute.png\",alt:\"mic\"}):/*#__PURE__*/_jsx(\"img\",{className:styles.micImg,src:\"/images/mic.png\",alt:\"mic\"})})]}),/*#__PURE__*/_jsx(\"h4\",{children:client.name})]},client.id);})})]})]});};export default Room;","map":{"version":3,"sources":["E:/College Assignment/Sem 6/SDP Project/project/frontend/src/pages/Room/Room.jsx"],"names":["React","useState","useEffect","useSelector","useWebRTC","useParams","useHistory","getRoom","styles","Room","user","state","auth","roomId","id","room","setRoom","clients","provideRef","handleMute","history","isMuted","setMuted","fetchRoom","data","prev","handManualLeave","push","handleMuteClick","clientId","goBack","clientsWrap","header","topic","actions","actionBtn","clientsList","map","client","userHead","userAvatar","avatar","instance","micBtn","muted","mic","micImg","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useWebRTC } from '../../hooks/useWebRTC';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { getRoom } from '../../http';\r\n\r\nimport styles from './Room.module.css';\r\n\r\nconst Room = () => {\r\n    const user = useSelector((state) => state.auth.user);\r\n    const { id: roomId } = useParams();\r\n    const [room, setRoom] = useState(null);\r\n\r\n    const { clients, provideRef, handleMute } = useWebRTC(roomId, user);\r\n\r\n    const history = useHistory();\r\n\r\n    const [isMuted, setMuted] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchRoom = async () => {\r\n            const { data } = await getRoom(roomId);\r\n            setRoom((prev) => data);\r\n        };\r\n\r\n        fetchRoom();\r\n    }, [roomId]);\r\n\r\n    useEffect(() => {\r\n        handleMute(isMuted, user.id);\r\n    }, [isMuted]);\r\n\r\n    const handManualLeave = () => {\r\n        history.push('/rooms');\r\n    };\r\n\r\n    const handleMuteClick = (clientId) => {\r\n        if (clientId !== user.id) {\r\n            return;\r\n        }\r\n        setMuted((prev) => !prev);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <button onClick={handManualLeave} className={styles.goBack}>\r\n                    <img src=\"/images/arrow-left.png\" alt=\"arrow-left\" />\r\n                    <span>All voice rooms</span>\r\n                </button>\r\n            </div>\r\n            <div className={styles.clientsWrap}>\r\n                <div className={styles.header}>\r\n                    {room && <h2 className={styles.topic}>{room.topic}</h2>}\r\n                    <div className={styles.actions}>\r\n                        <button className={styles.actionBtn}>\r\n                            <img src=\"/images/palm.png\" alt=\"palm-icon\" />\r\n                        </button>\r\n                        <button\r\n                            onClick={handManualLeave}\r\n                            className={styles.actionBtn}\r\n                        >\r\n                            <img src=\"/images/win.png\" alt=\"win-icon\" />\r\n                            <span>Leave quietly</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.clientsList}>\r\n                    {clients.map((client) => {\r\n                        return (\r\n                            <div className={styles.client} key={client.id}>\r\n                                <div className={styles.userHead}>\r\n                                    <img\r\n                                        className={styles.userAvatar}\r\n                                        src={client.avatar}\r\n                                        alt=\"\"\r\n                                    />\r\n                                    <audio\r\n                                        autoPlay\r\n                                        ref={(instance) => {\r\n                                            provideRef(instance, client.id);\r\n                                        }}\r\n                                    />\r\n                                    <button\r\n                                        onClick={() =>\r\n                                            handleMuteClick(client.id)\r\n                                        }\r\n                                        className={styles.micBtn}\r\n                                    >\r\n                                        {client.muted ? (\r\n                                            <img\r\n                                                className={styles.mic}\r\n                                                src=\"/images/mic-mute.png\"\r\n                                                alt=\"mic\"\r\n                                            />\r\n                                        ) : (\r\n                                            <img\r\n                                                className={styles.micImg}\r\n                                                src=\"/images/mic.png\"\r\n                                                alt=\"mic\"\r\n                                            />\r\n                                        )}\r\n                                    </button>\r\n                                </div>\r\n                                <h4>{client.name}</h4>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Room;"]},"metadata":{},"sourceType":"module"}