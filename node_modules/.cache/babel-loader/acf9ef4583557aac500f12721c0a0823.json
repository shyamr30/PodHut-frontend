{"ast":null,"code":"var _jsxFileName = \"E:\\\\College Assignment\\\\Sem 6\\\\SDP Project\\\\project\\\\frontend\\\\src\\\\pages\\\\Room\\\\Room.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useWebRTC } from '../../hooks/useWebRTC';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { getRoom } from '../../http';\nimport styles from './Room.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Room = () => {\n  _s();\n\n  const user = useSelector(state => state.auth.user);\n  const {\n    id: roomId\n  } = useParams();\n  const [room, setRoom] = useState(null);\n  const {\n    clients,\n    provideRef,\n    handleMute\n  } = useWebRTC(roomId, user);\n  const history = useHistory();\n  const [isMuted, setMuted] = useState(true);\n  useEffect(() => {\n    const fetchRoom = async () => {\n      const {\n        data\n      } = await getRoom(roomId);\n      setRoom(prev => data);\n    };\n\n    fetchRoom();\n  }, [roomId]);\n  useEffect(() => {\n    handleMute(isMuted, user.id);\n  }, [isMuted]);\n\n  const handManualLeave = () => {\n    history.push('/rooms');\n  };\n\n  const handleMuteClick = clientId => {\n    if (clientId !== user.id) {\n      return;\n    }\n\n    setMuted(prev => !prev);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handManualLeave,\n        className: styles.goBack,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/arrow-left.png\",\n          alt: \"arrow-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"All voice rooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.clientsWrap,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.header,\n        children: [room && /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.topic,\n          children: room.topic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.actions,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handManualLeave,\n            className: styles.actionBtn,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/win.png\",\n              alt: \"win-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Leave quietly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.clientsList,\n        children: clients.map(client => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.client,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.userHead,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: styles.userAvatar,\n                src: client.avatar,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n                autoPlay: true,\n                ref: instance => {\n                  provideRef(instance, client.id);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleMuteClick(client.id),\n                className: styles.micBtn,\n                children: client.muted ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: styles.mic,\n                  src: \"/images/mic-mute.png\",\n                  alt: \"mic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: styles.micImg,\n                  src: \"/images/mic.png\",\n                  alt: \"mic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: client.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this)]\n          }, client.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Room, \"UZmPQCDmYWSO74HxG/Jvo2U1V64=\", false, function () {\n  return [useSelector, useParams, useWebRTC, useHistory];\n});\n\n_c = Room;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["E:/College Assignment/Sem 6/SDP Project/project/frontend/src/pages/Room/Room.jsx"],"names":["React","useState","useEffect","useSelector","useWebRTC","useParams","useHistory","getRoom","styles","Room","user","state","auth","id","roomId","room","setRoom","clients","provideRef","handleMute","history","isMuted","setMuted","fetchRoom","data","prev","handManualLeave","push","handleMuteClick","clientId","goBack","clientsWrap","header","topic","actions","actionBtn","clientsList","map","client","userHead","userAvatar","avatar","instance","micBtn","muted","mic","micImg","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useWebRTC } from '../../hooks/useWebRTC';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { getRoom } from '../../http';\r\n\r\nimport styles from './Room.module.css';\r\n\r\nconst Room = () => {\r\n    const user = useSelector((state) => state.auth.user);\r\n    const { id: roomId } = useParams();\r\n    const [room, setRoom] = useState(null);\r\n\r\n    const { clients, provideRef, handleMute } = useWebRTC(roomId, user);\r\n\r\n    const history = useHistory();\r\n\r\n    const [isMuted, setMuted] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchRoom = async () => {\r\n            const { data } = await getRoom(roomId);\r\n            setRoom((prev) => data);\r\n        };\r\n\r\n        fetchRoom();\r\n    }, [roomId]);\r\n\r\n    useEffect(() => {\r\n        handleMute(isMuted, user.id);\r\n    }, [isMuted]);\r\n\r\n    const handManualLeave = () => {\r\n        history.push('/rooms');\r\n    };\r\n\r\n    const handleMuteClick = (clientId) => {\r\n        if (clientId !== user.id) {\r\n            return;\r\n        }\r\n        setMuted((prev) => !prev);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <button onClick={handManualLeave} className={styles.goBack}>\r\n                    <img src=\"/images/arrow-left.png\" alt=\"arrow-left\" />\r\n                    <span>All voice rooms</span>\r\n                </button>\r\n            </div>\r\n            <div className={styles.clientsWrap}>\r\n                <div className={styles.header}>\r\n                    {room && <h2 className={styles.topic}>{room.topic}</h2>}\r\n                    <div className={styles.actions}>\r\n                        {/* <button className={styles.actionBtn}>\r\n                            <img src=\"/images/palm.png\" alt=\"palm-icon\" />\r\n                        </button> */}\r\n                        <button\r\n                            onClick={handManualLeave}\r\n                            className={styles.actionBtn}\r\n                        >\r\n                            <img src=\"/images/win.png\" alt=\"win-icon\" />\r\n                            <span>Leave quietly</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.clientsList}>\r\n                    {clients.map((client) => {\r\n                        return (\r\n                            <div className={styles.client} key={client.id}>\r\n                                <div className={styles.userHead}>\r\n                                    <img\r\n                                        className={styles.userAvatar}\r\n                                        src={client.avatar}\r\n                                        alt=\"\"\r\n                                    />\r\n                                    <audio\r\n                                        autoPlay\r\n                                        ref={(instance) => {\r\n                                            provideRef(instance, client.id);\r\n                                        }}\r\n                                    />\r\n                                    <button\r\n                                        onClick={() =>\r\n                                            handleMuteClick(client.id)\r\n                                        }\r\n                                        className={styles.micBtn}\r\n                                    >\r\n                                        {client.muted ? (\r\n                                            <img\r\n                                                className={styles.mic}\r\n                                                src=\"/images/mic-mute.png\"\r\n                                                alt=\"mic\"\r\n                                            />\r\n                                        ) : (\r\n                                            <img\r\n                                                className={styles.micImg}\r\n                                                src=\"/images/mic.png\"\r\n                                                alt=\"mic\"\r\n                                            />\r\n                                        )}\r\n                                    </button>\r\n                                </div>\r\n                                <h4>{client.name}</h4>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Room;"]},"metadata":{},"sourceType":"module"}